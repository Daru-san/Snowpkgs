diff --git a/bin/src/message.dart b/bin/src/message.dart
index fbc93a4..2cd7cf7 100644
--- a/bin/src/message.dart
+++ b/bin/src/message.dart
@@ -71,19 +71,6 @@ Future<void> generateMessageCode({
     }
   }
 
-  // Generate Rust message files.
-  if (!silent) {
-    print("Verifying `protoc-gen-prost` for Rust." +
-        "\nThis might take a while if there are new updates.");
-  }
-  final cargoInstallCommand = await Process.run('cargo', [
-    'install',
-    'protoc-gen-prost',
-  ]);
-  if (cargoInstallCommand.exitCode != 0) {
-    print(cargoInstallCommand.stderr.toString().trim());
-    throw Exception('Cannot globally install `protoc-gen-prost` Rust crate');
-  }
   for (final entry in resourcesInFolders.entries) {
     final subPath = entry.key;
     final resourceNames = entry.value;
@@ -129,21 +116,6 @@ Future<void> generateMessageCode({
     await File('$rustOutputPath$subPath/mod.rs').writeAsString(modRsContent);
   }
 
-  // Generate Dart message files.
-  if (!silent) {
-    print("Verifying `protoc_plugin` for Dart." +
-        "\nThis might take a while if there are new updates.");
-  }
-  final pubGlobalActivateCommand = await Process.run('dart', [
-    'pub',
-    'global',
-    'activate',
-    'protoc_plugin',
-  ]);
-  if (pubGlobalActivateCommand.exitCode != 0) {
-    print(pubGlobalActivateCommand.stderr.toString().trim());
-    throw Exception('Cannot globally install `protoc_plugin` Dart package');
-  }
   for (final entry in resourcesInFolders.entries) {
     final subPath = entry.key;
     final resourceNames = entry.value;
diff --git a/cargokit/build_tool/lib/src/artifacts_provider.dart b/cargokit/build_tool/lib/src/artifacts_provider.dart
index ef655a9..01f58ea 100755
--- a/cargokit/build_tool/lib/src/artifacts_provider.dart
+++ b/cargokit/build_tool/lib/src/artifacts_provider.dart
@@ -60,10 +60,8 @@ class ArtifactProvider {
       return result;
     }
 
-    final rustup = Rustup();
     for (final target in targets) {
       final builder = RustBuilder(target: target, environment: environment);
-      builder.prepare(rustup);
       _log.info('Building ${environment.crateInfo.packageName} for $target');
       final targetDir = await builder.build();
       // For local build accept both static and dynamic libraries.
diff --git a/cargokit/build_tool/lib/src/builder.dart b/cargokit/build_tool/lib/src/builder.dart
index 570a537..6cc0e2a 100755
--- a/cargokit/build_tool/lib/src/builder.dart
+++ b/cargokit/build_tool/lib/src/builder.dart
@@ -137,11 +137,8 @@ class RustBuilder {
     final extraArgs = _buildOptions?.flags ?? [];
     final manifestPath = path.join(environment.manifestDir, 'Cargo.toml');
     runCommand(
-      'rustup',
+      'cargo',
       [
-        'run',
-        _toolchain,
-        'cargo',
         'build',
         ...extraArgs,
         '--manifest-path',
diff --git a/cargokit/cmake/cargokit.cmake b/cargokit/cmake/cargokit.cmake
index 41c03b0..9e1c5eb 100755
--- a/cargokit/cmake/cargokit.cmake
+++ b/cargokit/cmake/cargokit.cmake
@@ -60,7 +60,7 @@ function(apply_cargokit target manifest_dir lib_name any_symbol_name)
                 "${CMAKE_CURRENT_BINARY_DIR}/${CONFIG}/${CARGOKIT_LIB_FULL_NAME}"
                 "${CMAKE_CURRENT_BINARY_DIR}/_phony_"
                 COMMAND ${CMAKE_COMMAND} -E env ${CARGOKIT_ENV}
-                "${cargokit_cmake_root}/run_build_tool${SCRIPT_EXTENSION}" build-cmake
+                dart --packages=../../../../../../.dart_tool/package_config.json "${cargokit_cmake_root}/build_tool/bin/build_tool.dart" build-cmake
                 VERBATIM
             )
         endforeach()
@@ -70,7 +70,7 @@ function(apply_cargokit target manifest_dir lib_name any_symbol_name)
             ${OUTPUT_LIB}
             "${CMAKE_CURRENT_BINARY_DIR}/_phony_"
             COMMAND ${CMAKE_COMMAND} -E env ${CARGOKIT_ENV}
-            "${cargokit_cmake_root}/run_build_tool${SCRIPT_EXTENSION}" build-cmake
+            dart --packages=../../../../../../.dart_tool/package_config.json "${cargokit_cmake_root}/build_tool/bin/build_tool.dart" build-cmake
             VERBATIM
         )
     endif()
